// Clase 10 - Storage y JSON

// https://www.javatpoint.com/javascript-events 游녣游낕 Carpi dej칩 este link como "machetito"

/* 
Storage 游녤游낕 Forma de guardar informaci칩n en el Navegador. Funciona como un Obj desde JS, guardando todo 
            dentro del navegador del usuario (ej. el modo oscuro del Navegador)

Hay 2: LocalStorage y SessionStorage
La forma de llamarlos ya sea uno u otro es igual, solo cambia el "Local" y el "Session"

Local 游녤游낕 Guarda informaci칩n indefinidamente, independientemente de si borramos historial u otra cosa. Siempre queda guardado 
          en la Config del Navegador (Pero el Usuario puede borrarla.)

Session 游녤游낕 Guarda informaci칩n durante una pesta침a abierta, es decir que si la cerramos se pierde esa informaci칩n.

*/

// Para trabajar con LocalStorage, se hace de la siguiente forma
// 游녢游낕

localStorage.setItem("iva", 21);

// 游녡游낕 B치sicamente creamos un Objeto especial para el LocalStorage donde pasamos 2 variables 
//     ( "String(donde vemos el nombre que lleva el Objeto)", el number(que es el valor del String) )
// Haciendo esto, sea Local o Session Storage, el Navegador convierte el valor (sea el tipo de dato que sea), en un "String"

// 游녢游낕 Tambi칠n, para hacer un Storage, podemos pasar el valor como una variable

let usuarioPrompt = prompt("Ingrese su Nombre!")
localStorage.setItem("Usuario", usuarioPrompt)

// 游녡游낕 As칤 como podemos tomar un nombre y almacenarlo en el Storage, 
//    tambi칠n podemos llamarlo y mostrarlo 游녢游낕

let usuarioEnLocalStorage = localStorage.getItem("Usuario") // 游녣游낕 Traemos el Item con la Key "Usuario" y lo almacenamos en la Variable.
console.log(usuarioEnLocalStorage) // 游녣游낕 Mostramos la Variable en Consola.

// Ahora, si vamos a hacer un ECommerce, vamos a necesitar utilizar Objetos, verdad?
// Veamos el siguiente Ejemplo 游녢游낕

const usuarioObjeto = {
    nombre:"Ulaises",
    edad: 27
}

// localStorage.setItem("usuarioObjeto", usuarioObjeto) // 游녣游낕 Comento esta l칤nea para escribirla abajo, sino no funciona xd

// 游녡游낕 El tema con esto, es que al verlo en la pesta침a de Almacenamiento en el Navegador, lo muestra como [object Object].

// 游녢游낕Entonces para solucionar eso, escribimos el siguiente c칩digo

const usuarioJSON = JSON.stringify(usuarioObjeto) 
// 游녡游낕 Lo que hacemos con esto, es convertir la variable "usuarioObjeto" en un array, permitiendo leer los datos del objeto.

console.log(usuarioJSON)

// localStorage.setItem("usuarioObjeto", usuarioObjeto) // 游녣游낕 Comento esto xq sino no funciona la l칤nea 63.

// Entonces, ahora en v칠z de guardar los datos de "usuarioObjeto" directamente, guardamos los datos luego de que pasen por el JSON.stringify
// Y quedar칤a algo as칤 游녢游낕

localStorage.setItem("usuarioJSON", usuarioJSON)

const usuarioEnLocalStorage2 = localStorage.getItem("usuarioJSON") 
// 游녡游낕 Haciendo esto, nos quedan los objetos en un array.
// 游녢游낕 Ahora hay que hacer un parseo para poder transformar los datos a objeto y usarlos.
const usuarioObjeto2 = JSON.parse(usuarioEnLocalStorage2)

console.log(usuarioObjeto)

// 游녡游낕 Al momento de guardar los datos, se hace con un Stringify y despu칠s al momento de recuperarlo se Parsea.

// 游녢游낕 Incluso, para hacer el Stringify o el Parse, podemos ahorrar una l칤nea de c칩digo de la siguiente manera...

const usuarioObjeto3 = {
    nombre:"Luis",
    edad: 27
}

localStorage.setItem("usuarioJSON3", JSON.stringify(usuarioObjeto3))

const usuarioEnLS = JSON.parse(localStorage.getItem("usuarioJSON3"))

// 游녢游낕 Un ejemplo un poco m치s profundo y mas com칰n en la pr치ctica

const productos = [
    { nombre: "Pizza", precio: 5000 },
    { nombre: "Lomito", precio: 3500 },
    { nombre: "Milanesa", precio: 4500 }
]

localStorage.setItem("productos", JSON.stringify(productos))

const productosEnLS = JSON.parse(localStorage.getItem("productos"))
console.log(productosEnLS)

// 游녢游낕 El ejemplo super com칰n de todo esto es el Modo Oscuro

const botonColorMode = document.querySelector("#color-mode"); // 游녣游낕 Traemos el Bot칩n con un ID
const body = document.body; // 游녣游낕 Traemos el Body

let darkMode = localStorage.getItem("dark-mode"); // 游녣游낕 Hacemos una Variable y metemos un Item en Local Storage que es "dark-mode"

function activarDarkMode() { // 游녣游낕 B치sicamente, con esto le decimos que est치 "activado" y con la clase en Body
    body.classList.add("dark-mode");
    localStorage.setItem("dark-mode", "activado");
}

function desactivarDarkMode() { // 游녣游낕 B치sicamente, con esto le decimos que est치 "desactivado" y sin la clase en Body
    body.classList.remove("dark-mode");
    localStorage.setItem("dark-mode", "desactivado");
}

if (darkMode === "activado") {
    activarDarkMode(); // 游녣游낕 Si en el LocalStorage, est치 "activado", entonces carga la p치gina con la funci칩n activarDarkMode
} else {
    desactivarDarkMode(); // 游녣游낕 Si en el LocalStorage, est치 "desactivado", entonces carga la p치gina con la funci칩n desactivarDarkMode
}

botonColorMode.addEventListener("click", () => { // 游녣游낕 Registra si se hace el evento "click"
    darkMode = localStorage.getItem("dark-mode"); // 游녣游낕 Llamamos al Item "dark-mode"

    if (darkMode === "activado") { // 游녣游낕 Si en el LocalStorage, est치 "activado", entonces cuando presione el bot칩n se va a activar "desactivarDarkMode"
        desactivarDarkMode();
    } else {
        activarDarkMode(); // 游녣游낕 Si en el LocalStorage, est치 "desactivado", entonces cuando presione el bot칩n se va a activar "activarDarkMode"
    }
})